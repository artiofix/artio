name: Continuous Integration

on:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]
    branches:
      - master

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dfix.core.debug=STATE_CLEANUP -Dfix.core.ci=true"
  JAVA_VERSION: '17'
permissions:
  contents: read

jobs:
  build:
    name: Java ${{ matrix.java }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: [ '17', '21' ]
        os: [ 'ubuntu-24.04', 'windows-latest' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV
      - name: Setup java 17 to run the Gradle script
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle
        run: ./gradlew
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "dir=build/test_logs" >> $GITHUB_OUTPUT
          ./gradlew copyTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.dir == 'build/test_logs'
        uses: actions/upload-artifact@v4
        with:
          name: crash-logs-${{ matrix.os }}-java-${{ matrix.java }}
          path: ${{ steps.copy_test_logs.outputs.dir }}
